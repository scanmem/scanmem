# check the lregions command functions as expected
expect_after {
    -re "\[^\n\r\]*$prompt$" { fail "$test (bad match)" }
    timeout { fail "$test ($subtest) (timeout)" }
}

# name the tests
set test "list regions"
set subtest "defailt"

scanmem_start

    # try using lregions without any pid
    set subtest "no target"
    send "lregions\n"
    expect {
        -re "error: no target.*$prompt$" { pass "$test ($subtest)" }
    }

    # start and attach to test process
    smtest_start "--mode=exit"

    # check regions are listed
    set subtest "regions listed"
    send "lregions\n"
    expect {
        -re "\\\[\[ 0-9\]+\\\].*$prompt$" { pass "$test ($subtest)" }
    }

    # delete all regions, then try again
    set subtest "no regions left"
    send "dregion !0\n"
    send "dregion 0\n"
    send "lregions\n"
    expect {
        -re "info: no regions.*$prompt$" { pass "$test ($subtest)" }
    }

    # and restore them
    set subtest "regions restored"
    send "reset\n"
    send "lregions\n"
    expect {
        -re "\\\[\[ 0-9\]+\\\].*$prompt$" { pass "$test ($subtest)" }
    }

    # try using unexpected arguments
    set subtest "unexpected arguments"
    send "lregions xyzzy\n"
    expect {
        -re "\\\[\[ 0-9\]+\\\].*$prompt$" { pass "$test ($subtest)" }
    }

    # all done, terminate the test process.
    smtest_exit

scanmem_exit
